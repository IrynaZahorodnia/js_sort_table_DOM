{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,C,I,E,S,C,ECWE,CAAU,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAS,WAiBtC,IAAA,EAhBA,EAAW,IAAI,CAAC,SAAC,CAAA,CAAO,CAAxB,EACE,IAAM,EAAe,EAAM,QAAQ,CAAC,EAAE,CAAC,WAAW,CAC5C,EAAe,EAAM,QAAQ,CAAC,EAAE,CAAC,WAAW,CAElD,OAAQ,CAAU,CAAC,EAAE,CAAC,WAAW,EAC/B,IAAK,OACL,IAAK,WACH,OAAO,EAAa,aAAa,CAAC,EACpC,KAAK,MACH,OAAO,EAAe,CACxB,KAAK,SACH,OACE,EAAkB,GAAgB,EAAkB,EAE1D,CACF,GACA,AAAA,CAAA,EAAA,EAAM,OAAO,CAAC,EAAE,AAAF,EAAG,MAAM,CAAvB,KAAA,CAAA,EAAwB,EAAG,GAC7B,E,EA3BF,SAAS,EAAkB,CAAM,EAC/B,OAAO,SAAS,EAAO,OAAO,CAAC,IAAK,IAAI,UAAU,CAAC,IAAK,IAC1D,CAMA,IAAK,IAJC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAa,EAAM,IAAI,CAAC,EAAE,CAAC,QAAQ,CACnC,EAAc,EAAG,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,EAEnC,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IAAvC,EAAA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar _loop = function(i) {\n    tableHeads[i].addEventListener(\"click\", function() {\n        var _table_tBodies_;\n        tableDatas.sort(function(data1, data2) {\n            var data1Content = data1.children[i].textContent;\n            var data2Content = data2.children[i].textContent;\n            switch(tableHeads[i].textContent){\n                case \"Name\":\n                case \"Position\":\n                    return data1Content.localeCompare(data2Content);\n                case \"Age\":\n                    return data1Content - data2Content;\n                case \"Salary\":\n                    return setSalaryToNumber(data1Content) - setSalaryToNumber(data2Content);\n            }\n        });\n        (_table_tBodies_ = table.tBodies[0]).append.apply(_table_tBodies_, _to_consumable_array(tableDatas));\n    });\n};\nfunction setSalaryToNumber(salary) {\n    return parseInt(salary.replace(\"$\", \"\").replaceAll(\",\", \"\"));\n}\nvar table = document.querySelector(\"table\");\nvar tableHeads = table.rows[0].children;\nvar tableDatas = _to_consumable_array(table.tBodies[0].rows);\nfor(var i = 0; i < tableHeads.length; i++)_loop(i);\n\n//# sourceMappingURL=index.656c6b86.js.map\n","'use strict';\n\nfunction setSalaryToNumber(salary) {\n  return parseInt(salary.replace('$', '').replaceAll(',', ''));\n}\n\nconst table = document.querySelector('table');\nconst tableHeads = table.rows[0].children;\nconst tableDatas = [...table.tBodies[0].rows];\n\nfor (let i = 0; i < tableHeads.length; i++) {\n  tableHeads[i].addEventListener('click', () => {\n    tableDatas.sort((data1, data2) => {\n      const data1Content = data1.children[i].textContent;\n      const data2Content = data2.children[i].textContent;\n\n      switch (tableHeads[i].textContent) {\n        case 'Name':\n        case 'Position':\n          return data1Content.localeCompare(data2Content);\n        case 'Age':\n          return data1Content - data2Content;\n        case 'Salary':\n          return (\n            setSalaryToNumber(data1Content) - setSalaryToNumber(data2Content)\n          );\n      }\n    });\n    table.tBodies[0].append(...tableDatas);\n  });\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","_loop","tableHeads","addEventListener","_table_tBodies_","tableDatas","sort","data1","data2","data1Content","children","textContent","data2Content","localeCompare","setSalaryToNumber","table","tBodies","append","apply","salary","parseInt","replace","replaceAll","document","querySelector","rows"],"version":3,"file":"index.656c6b86.js.map"}